"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var astro_sys_exports = {};
__export(astro_sys_exports, {
  createAstroSys: () => createAstroSys
});
module.exports = __toCommonJS(astro_sys_exports);
var import_utils = require("./utils.js");
function createAstroSys(logger, typescript) {
  const astroSys = {
    ...typescript.sys,
    fileExists(path) {
      return typescript.sys.fileExists((0, import_utils.ensureRealAstroFilePath)(path));
    },
    readDirectory(path, extensions, exclude, include, depth) {
      const extensionsWithAstro = (extensions != null ? extensions : []).concat(".astro");
      return typescript.sys.readDirectory(path, extensionsWithAstro, exclude, include, depth);
    }
  };
  if (typescript.sys.realpath) {
    const realpath = typescript.sys.realpath;
    astroSys.realpath = function(path) {
      if ((0, import_utils.isVirtualAstroFilePath)(path)) {
        return realpath((0, import_utils.toRealAstroFilePath)(path)) + ".ts";
      }
      return realpath(path);
    };
  }
  return astroSys;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createAstroSys
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL2FzdHJvLXN5cy50cyJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQSxtQkFBcUY7QUFLOUUsU0FBUyxlQUFlLFFBQWdCLFlBQTZEO0FBQzNHLFFBQU0sV0FBc0I7QUFBQSxJQUMzQixHQUFHLFdBQVc7QUFBQSxJQUNkLFdBQVcsTUFBYztBQUN4QixhQUFPLFdBQVcsSUFBSSxlQUFXLHNDQUF3QixJQUFJLENBQUM7QUFBQSxJQUMvRDtBQUFBLElBQ0EsY0FBYyxNQUFNLFlBQVksU0FBUyxTQUFTLE9BQU87QUFDeEQsWUFBTSx1QkFBdUIsa0NBQWMsQ0FBQyxHQUFHLE9BQU8sUUFBUTtBQUU5RCxhQUFPLFdBQVcsSUFBSSxjQUFjLE1BQU0scUJBQXFCLFNBQVMsU0FBUyxLQUFLO0FBQUEsSUFDdkY7QUFBQSxFQUNEO0FBRUEsTUFBSSxXQUFXLElBQUksVUFBVTtBQUM1QixVQUFNLFdBQVcsV0FBVyxJQUFJO0FBQ2hDLGFBQVMsV0FBVyxTQUFVLE1BQU07QUFDbkMsY0FBSSxxQ0FBdUIsSUFBSSxHQUFHO0FBQ2pDLGVBQU8sYUFBUyxrQ0FBb0IsSUFBSSxDQUFDLElBQUk7QUFBQSxNQUM5QztBQUNBLGFBQU8sU0FBUyxJQUFJO0FBQUEsSUFDckI7QUFBQSxFQUNEO0FBRUEsU0FBTztBQUNSOyIsCiAgIm5hbWVzIjogW10KfQo=
